<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
>
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard AutoReverse="False" x:Key="ItemSelectedStoryboard">
                            <ColorAnimation 
                                BeginTime="0:0:0" 
                                Duration="0:0:0.2" 
                                To="{StaticResource Accent2Colour}"
                                Storyboard.TargetName="Bd" 
                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                            />
                            <ColorAnimation 
                                BeginTime="0:0:0" 
                                Duration="0:0:0.2" 
                                To="{StaticResource StandardForegroundColour}"
                                Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                            />
                        </Storyboard>
                        <Storyboard AutoReverse="False" x:Key="MouseOverStoryboard">
                            <ColorAnimation 
                                BeginTime="0:0:0" 
                                Duration="0:0:0.2" 
                                To="{StaticResource StandardForegroundColour}"
                                Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                            />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border 
                        x:Name="Bd" 
                        SnapsToDevicePixels="true" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}"
                        Margin="3,0,3,0"
                    >
                        <GridViewRowPresenter 
                            Content="{TemplateBinding ContentControl.Content}" 
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                            Margin="-3,0,-3,0"
                        />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverStoryboard_BeginStoryboard" Storyboard="{StaticResource MouseOverStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="MouseOverStoryboard_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <!--<Setter TargetName="PART_HeaderGripper" Property="Panel.Background" Value="Red"/>-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard 
                                    x:Name="ItemSelectedStoryboard_BeginStoryboard"
    		                        Storyboard="{StaticResource ItemSelectedStoryboard}"
                                />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="ItemSelectedStoryboard_BeginStoryboard"/>
                            </Trigger.ExitActions>
                                <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Accent2Brush}"/>
							<Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}"/>-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Accent2DarkBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <ControlTemplate.Resources>
                        <Storyboard AutoReverse="False" x:Key="MouseOverStoryboard">
                            <ColorAnimation 
                                BeginTime="0:0:0" 
                                Duration="0:0:0.2" 
                                To="{StaticResource Accent1Colour}"
                                Storyboard.TargetName="HeaderBorder" 
                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                            />
                            <ColorAnimation 
                                BeginTime="0:0:0" 
                                Duration="0:0:0.2" 
                                To="{StaticResource StandardForegroundColour}"
                                Storyboard.TargetName="HeaderContent" 
                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="True">
                        <Border 
                            BorderThickness="0" 
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Name="HeaderBorder"
                            Background="{StaticResource Accent1DarkBrush}"
                            Margin="1.5,0,1.5,0"
                        >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Padding="{TemplateBinding Control.Padding}" Grid.RowSpan="2">
                                    <ContentPresenter 
                                        RecognizesAccessKey="True" 
                                        Content="{TemplateBinding ContentControl.Content}" 
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                        TextBlock.FontWeight="SemiBold"
                                        TextBlock.FontFamily="{DynamicResource ThemeFontFamily}"
                                        TextBlock.FontSize="{DynamicResource ThemeFontSize}"
                                        Name="HeaderContent" 
                                        Margin="3" 
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                        TextElement.Foreground="{StaticResource StandardForegroundBrush}"
                                    />
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="1,1,1,0" Name="HeaderPressBorder" Margin="1,0,0,1" />
                        <Canvas>
                            <Thumb Name="PART_HeaderGripper">
                                <Thumb.Style>
                                    <Style TargetType="Thumb">
                                        <Setter Property="Canvas.Right" Value="-9"/>

                                        <Setter Property="Control.Padding" Value="0,0,0,0"/>
                                        <Setter Property="Panel.Background" Value="Blue"/>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border Padding="{TemplateBinding Control.Padding}" Background="Red">
                                                        <Rectangle 
                                                            Fill="{TemplateBinding Panel.Background}" 
                                                            Width="1" 
                                                            HorizontalAlignment="Center" 
                                                        />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverStoryboard_BeginStoryboard" Storyboard="{StaticResource MouseOverStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="MouseOverStoryboard_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <!--<Setter TargetName="PART_HeaderGripper" Property="Panel.Background" Value="Red"/>-->
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Panel.Background" Value="{StaticResource Accent1Brush}" />
                            <Setter TargetName="HeaderPressBorder" Property="Border.BorderBrush" Value="Transparent"/>
                            <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Hidden" />
                            <Setter TargetName="HeaderContent" Property="FrameworkElement.Margin" Value="1,1,0,0"/>
                            <Setter TargetName="HeaderContent" Property="TextElement.Foreground" Value="{StaticResource StandardForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="FrameworkElement.Height" Value="NaN">
                            <Setter Property="FrameworkElement.MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="GridViewScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Padding}">
                <ScrollViewer DockPanel.Dock="Top" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                    <GridViewHeaderRowPresenter 
                        AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" 
                        ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" 
                        ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" 
                        ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}" 
                        ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" 
                        ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" 
                        Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" 
                        ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" 
                        Margin="3" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    />
                </ScrollViewer>
                <ScrollContentPresenter 
                    x:Name="PART_ScrollContentPresenter" 
                    CanContentScroll="{TemplateBinding CanContentScroll}" 
                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                    Content="{TemplateBinding Content}" 
                    KeyboardNavigation.DirectionalNavigation="Local" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                />
            </DockPanel>
            <ScrollBar 
                x:Name="PART_HorizontalScrollBar" 
                Cursor="Arrow" 
                Maximum="{TemplateBinding ScrollableWidth}" 
                Minimum="0.0" 
                Orientation="Horizontal" 
                Grid.Row="1" 
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                ViewportSize="{TemplateBinding ViewportWidth}"
            />
            <ScrollBar 
                x:Name="PART_VerticalScrollBar" 
                Cursor="Arrow" 
                Grid.Column="1" 
                Maximum="{TemplateBinding ScrollableHeight}" 
                Minimum="0.0" 
                Orientation="Vertical" 
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                ViewportSize="{TemplateBinding ViewportHeight}"
            />
            <DockPanel Background="{Binding Background, ElementName=PART_VerticalScrollBar}" Grid.Column="1" LastChildFill="false" Grid.Row="1">
                <Rectangle DockPanel.Dock="Left" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1"/>
                <Rectangle DockPanel.Dock="Top" Fill="White" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
            </DockPanel>
        </Grid>
    </ControlTemplate>

    <Style x:Key="GridViewScrollViewerStyleKey" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template" Value="{StaticResource GridViewScrollViewerTemplate}" />
    </Style>
    
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LowkeyForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource LowkeyForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="12,6,12,6"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border 
                        x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true"
                    >
                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{StaticResource GridViewScrollViewerStyleKey}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>